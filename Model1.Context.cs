//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HizliSatis
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class hizlisatisEntities2 : DbContext
    {
        public hizlisatisEntities2()
            : base("name=hizlisatisEntities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Gider> Giders { get; set; }
        public virtual DbSet<Kullanicilar> Kullanicilars { get; set; }
        public virtual DbSet<Satislar> Satislars { get; set; }
        public virtual DbSet<SatisListesi> SatisListesis { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<UrunGruplari> UrunGruplaris { get; set; }
        public virtual DbSet<Urunler> Urunlers { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<gunlukciro_Result> gunlukciro(Nullable<System.DateTime> tarih)
        {
            var tarihParameter = tarih.HasValue ?
                new ObjectParameter("tarih", tarih) :
                new ObjectParameter("tarih", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<gunlukciro_Result>("gunlukciro", tarihParameter);
        }
    
        public virtual ObjectResult<tariharasisatisciro_Result> tariharasisatisciro(Nullable<System.DateTime> tarih1, Nullable<System.DateTime> tarih2)
        {
            var tarih1Parameter = tarih1.HasValue ?
                new ObjectParameter("tarih1", tarih1) :
                new ObjectParameter("tarih1", typeof(System.DateTime));
    
            var tarih2Parameter = tarih2.HasValue ?
                new ObjectParameter("tarih2", tarih2) :
                new ObjectParameter("tarih2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tariharasisatisciro_Result>("tariharasisatisciro", tarih1Parameter, tarih2Parameter);
        }
    
        public virtual ObjectResult<tariharasisatislar_Result> tariharasisatislar(Nullable<System.DateTime> tarih1, Nullable<System.DateTime> tarih2)
        {
            var tarih1Parameter = tarih1.HasValue ?
                new ObjectParameter("tarih1", tarih1) :
                new ObjectParameter("tarih1", typeof(System.DateTime));
    
            var tarih2Parameter = tarih2.HasValue ?
                new ObjectParameter("tarih2", tarih2) :
                new ObjectParameter("tarih2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tariharasisatislar_Result>("tariharasisatislar", tarih1Parameter, tarih2Parameter);
        }
    
        public virtual ObjectResult<ikitariharasisatislisstesi_Result> ikitariharasisatislisstesi(Nullable<System.DateTime> tarih1, Nullable<System.DateTime> tarih2)
        {
            var tarih1Parameter = tarih1.HasValue ?
                new ObjectParameter("tarih1", tarih1) :
                new ObjectParameter("tarih1", typeof(System.DateTime));
    
            var tarih2Parameter = tarih2.HasValue ?
                new ObjectParameter("tarih2", tarih2) :
                new ObjectParameter("tarih2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ikitariharasisatislisstesi_Result>("ikitariharasisatislisstesi", tarih1Parameter, tarih2Parameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> ikitariharasisatistoplami(Nullable<System.DateTime> tarih1, Nullable<System.DateTime> tarih2)
        {
            var tarih1Parameter = tarih1.HasValue ?
                new ObjectParameter("tarih1", tarih1) :
                new ObjectParameter("tarih1", typeof(System.DateTime));
    
            var tarih2Parameter = tarih2.HasValue ?
                new ObjectParameter("tarih2", tarih2) :
                new ObjectParameter("tarih2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("ikitariharasisatistoplami", tarih1Parameter, tarih2Parameter);
        }
    
        public virtual ObjectResult<ikitariharasiSatislar_Result> ikitariharasiSatislar(Nullable<System.DateTime> tarih1, Nullable<System.DateTime> tarih2)
        {
            var tarih1Parameter = tarih1.HasValue ?
                new ObjectParameter("tarih1", tarih1) :
                new ObjectParameter("tarih1", typeof(System.DateTime));
    
            var tarih2Parameter = tarih2.HasValue ?
                new ObjectParameter("tarih2", tarih2) :
                new ObjectParameter("tarih2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ikitariharasiSatislar_Result>("ikitariharasiSatislar", tarih1Parameter, tarih2Parameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> ikitariharasiSatislarToplami(Nullable<System.DateTime> tarih1, Nullable<System.DateTime> tarih2)
        {
            var tarih1Parameter = tarih1.HasValue ?
                new ObjectParameter("tarih1", tarih1) :
                new ObjectParameter("tarih1", typeof(System.DateTime));
    
            var tarih2Parameter = tarih2.HasValue ?
                new ObjectParameter("tarih2", tarih2) :
                new ObjectParameter("tarih2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("ikitariharasiSatislarToplami", tarih1Parameter, tarih2Parameter);
        }
    
        public virtual ObjectResult<tarihigecenler_Result> tarihigecenler()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tarihigecenler_Result>("tarihigecenler");
        }
    
        public virtual ObjectResult<TARIHsatisListesi_Result> TARIHsatisListesi(Nullable<System.DateTime> tarih1, Nullable<System.DateTime> tarih2)
        {
            var tarih1Parameter = tarih1.HasValue ?
                new ObjectParameter("tarih1", tarih1) :
                new ObjectParameter("tarih1", typeof(System.DateTime));
    
            var tarih2Parameter = tarih2.HasValue ?
                new ObjectParameter("tarih2", tarih2) :
                new ObjectParameter("tarih2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TARIHsatisListesi_Result>("TARIHsatisListesi", tarih1Parameter, tarih2Parameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TARIHsatisListesiToplami(Nullable<System.DateTime> tarih1, Nullable<System.DateTime> tarih2)
        {
            var tarih1Parameter = tarih1.HasValue ?
                new ObjectParameter("tarih1", tarih1) :
                new ObjectParameter("tarih1", typeof(System.DateTime));
    
            var tarih2Parameter = tarih2.HasValue ?
                new ObjectParameter("tarih2", tarih2) :
                new ObjectParameter("tarih2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TARIHsatisListesiToplami", tarih1Parameter, tarih2Parameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TARIHsatisListesiGider(Nullable<System.DateTime> tarih1, Nullable<System.DateTime> tarih2)
        {
            var tarih1Parameter = tarih1.HasValue ?
                new ObjectParameter("tarih1", tarih1) :
                new ObjectParameter("tarih1", typeof(System.DateTime));
    
            var tarih2Parameter = tarih2.HasValue ?
                new ObjectParameter("tarih2", tarih2) :
                new ObjectParameter("tarih2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TARIHsatisListesiGider", tarih1Parameter, tarih2Parameter);
        }
    
        public virtual ObjectResult<SatisIDBySatisListesi_Result> SatisIDBySatisListesi(Nullable<int> satisId)
        {
            var satisIdParameter = satisId.HasValue ?
                new ObjectParameter("SatisId", satisId) :
                new ObjectParameter("SatisId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SatisIDBySatisListesi_Result>("SatisIDBySatisListesi", satisIdParameter);
        }
    
        public virtual ObjectResult<TARIHIGecenUrunListesi_Result> TARIHIGecenUrunListesi()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TARIHIGecenUrunListesi_Result>("TARIHIGecenUrunListesi");
        }
    }
}
